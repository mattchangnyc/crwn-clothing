{"ast":null,"code":"var _jsxFileName = \"/Users/MATTCHANG/React_Projects/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux'; //import CollectionsOverview from '../../components/collections-overview/collections-overview.component';\n\nimport CollectionPage from '../collection/collection.component';\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container'; //import { updateCollections } from '../../redux/shop/shop.actions';\n\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions'; //import { selectIsCollectionFetching, selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors';\n\nimport WithSpinner from '../../components/with-spinner/with-spinner.component'; // const CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  // constructor() {\n  //     super();\n  //     this.state = {\n  //         loading: true\n  //     };\n  // }\n  // state = {\n  //     loading: true\n  // };\n  componentDidMount() {\n    // this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n    //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    //     updateCollections(collectionsMap);\n    //     this.setState({ loading: false });\n    // });\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionsLoaded\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverviewContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: !isCollectionsLoaded\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 40\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionsLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  // updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/MATTCHANG/React_Projects/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","createStructuredSelector","connect","CollectionPage","CollectionsOverviewContainer","fetchCollectionsStartAsync","WithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isCollectionsLoaded","path","mapStateToProps","selectIsCollectionsLoaded","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,4BAAP,MAAyC,sEAAzC,C,CAEA;;AACA,SAASC,0BAAT,QAA2C,+BAA3C,C,CACA;;AACA,OAAOC,WAAP,MAAwB,sDAAxB,C,CAEA;;AACA,MAAMC,yBAAyB,GAAGD,WAAW,CAACH,cAAD,CAA7C;;AAEA,MAAMK,QAAN,SAAuBT,KAAK,CAACU,SAA7B,CAAsC;AAClC;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIAC,EAAAA,iBAAiB,GAAG;AAGhB;AACA;AACA;AACA;AACA;AAEA,UAAM;AAAEL,MAAAA;AAAF,QAAiC,KAAKM,KAA5C;AACAN,IAAAA,0BAA0B;AAC7B;;AAEDO,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAiC,KAAKH,KAA5C;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKI,oBAAC,KAAD;AACI,MAAA,KAAK,MADT;AACU,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,EAD9B;AAEI,MAAA,SAAS,EAAEX,4BAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,eASI,oBAAC,KAAD;AACI,MAAA,IAAI,EAAG,GAAES,KAAK,CAACE,IAAK,gBADxB;AAEI,MAAA,MAAM,EAAGJ,KAAD,iBAAW,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAG,CAACG;AAAxC,SAAkEH,KAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,CADJ;AAgBH;;AA/CiC;;AAmDtC,MAAMK,eAAe,GAAGf,wBAAwB,CAAC;AAC7Ca,EAAAA,mBAAmB,EAAEG;AADwB,CAAD,CAAhD;;AAIA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACpC;AACAd,EAAAA,0BAA0B,EAAE,MAAMc,QAAQ,CAACd,0BAA0B,EAA3B;AAFN,CAAL,CAAnC;;AAKA,eAAeH,OAAO,CAACc,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CV,QAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\n\n//import CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\n\n//import { updateCollections } from '../../redux/shop/shop.actions';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\n//import { selectIsCollectionFetching, selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\n\n// const CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component{\n    // constructor() {\n    //     super();\n\n    //     this.state = {\n    //         loading: true\n    //     };\n    // }\n\n    // state = {\n    //     loading: true\n    // };\n\n    \n\n    componentDidMount() {\n\n\n        // this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n        //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n        //     updateCollections(collectionsMap);\n        //     this.setState({ loading: false });\n        // });\n\n        const { fetchCollectionsStartAsync } = this.props;\n        fetchCollectionsStartAsync();\n    }\n\n    render() {\n        const { match, isCollectionsLoaded } = this.props;\n\n        return (\n            <div className='shop-page'>\n                {/*<Route \n                    exact path={`${match.path}`} \n                    render={(props) => <CollectionsOverviewWithSpinner isLoading={ isCollectionFetching } {...props} />} \n                />*/}\n                <Route \n                    exact path={`${match.path}`} \n                    component={CollectionsOverviewContainer}\n                />\n                <Route \n                    path={`${match.path}/:collectionId`} \n                    render={(props) => <CollectionPageWithSpinner isLoading={ !isCollectionsLoaded } {...props} />}\n                />\n            </div>\n        )\n    }\n} \n\n\nconst mapStateToProps = createStructuredSelector({\n    isCollectionsLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n    // updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n    fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}