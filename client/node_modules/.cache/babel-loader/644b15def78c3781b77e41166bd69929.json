{"ast":null,"code":"var _jsxFileName = \"/Users/MATTCHANG/React_Projects/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom'; // import { createStructuredSelector } from 'reselect';\n\nimport { connect } from 'react-redux'; //import CollectionsOverview from '../../components/collections-overview/collections-overview.component';\n//import CollectionPage from '../collection/collection.component';\n\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\nimport CollectionPageContainer from '../collection/collection.component'; //import { updateCollections } from '../../redux/shop/shop.actions';\n//import { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\n\nimport { fetchCollectionsStart } from '../../redux/shop/shop.actions'; //import { selectIsCollectionFetching, selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors';\n// import WithSpinner from '../../components/with-spinner/with-spinner.component';\n// const CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n// const CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nconst ShopPage = ({\n  fetchCollectionsStart,\n  match\n}) => {\n  useEffect(() => {\n    fetchCollectionsStart();\n  }); // constructor() {\n  //     super();\n  //     this.state = {\n  //         loading: true\n  //     };\n  // }\n  // state = {\n  //     loading: true\n  // };\n  // componentDidMount() {\n  //     // this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n  //     //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //     //     updateCollections(collectionsMap);\n  //     //     this.setState({ loading: false });\n  //     // });\n  //     // const { fetchCollectionsStartAsync } = this.props;\n  //     // fetchCollectionsStartAsync();\n  //     const { fetchCollectionsStart } = this.props;\n  //     fetchCollectionsStart();\n  // }\n  // render() {\n  //const { match, isCollectionsLoaded } = this.props;\n  // const { match } = this.props\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shop-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    component: CollectionsOverviewContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: `${match.path}/:collectionId`,\n    component: CollectionPageContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  })); // }\n}; // const mapStateToProps = createStructuredSelector({\n//     isCollectionsLoaded: selectIsCollectionsLoaded\n// });\n\n\nconst mapDispatchToProps = dispatch => ({\n  // updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n  // fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n}); //export default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/MATTCHANG/React_Projects/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","useEffect","Route","connect","CollectionsOverviewContainer","CollectionPageContainer","fetchCollectionsStart","ShopPage","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;AACA;;AACA,OAAOC,4BAAP,MAAyC,sEAAzC;AACA,OAAOC,uBAAP,MAAoC,oCAApC,C,CAEA;AACA;;AACA,SAASC,qBAAT,QAAsC,+BAAtC,C,CACA;AACA;AAEA;AACA;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAED,EAAAA,qBAAF;AAAyBE,EAAAA;AAAzB,CAAD,KAAsC;AAElDP,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,qBAAqB;AACxB,GAFQ,CAAT,CAFkD,CAMnD;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACI;AACA;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKI,oBAAC,KAAD;AACI,IAAA,KAAK,MADT;AACU,IAAA,IAAI,EAAG,GAAEE,KAAK,CAACC,IAAK,EAD9B;AAEI,IAAA,SAAS,EAAEL,4BAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,eASI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAG,GAAEI,KAAK,CAACC,IAAK,gBADxB;AAEI,IAAA,SAAS,EAAEJ,uBAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CADJ,CAxC+C,CA4DnD;AACH,CA7DD,C,CAgEA;AACA;AACA;;;AAEA,MAAMK,kBAAkB,GAAGC,QAAQ,KAAK;AACpC;AACA;AACAL,EAAAA,qBAAqB,EAAE,MAAMK,QAAQ,CAACL,qBAAqB,EAAtB;AAHD,CAAL,CAAnC,C,CAMA;;;AACA,eAAeH,OAAO,CAAC,IAAD,EAAOO,kBAAP,CAAP,CAAkCH,QAAlC,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom';\n// import { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\n\n//import CollectionsOverview from '../../components/collections-overview/collections-overview.component';\n//import CollectionPage from '../collection/collection.component';\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\nimport CollectionPageContainer from '../collection/collection.component';\n\n//import { updateCollections } from '../../redux/shop/shop.actions';\n//import { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { fetchCollectionsStart } from '../../redux/shop/shop.actions';\n//import { selectIsCollectionFetching, selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors';\n// import WithSpinner from '../../components/with-spinner/with-spinner.component';\n\n// const CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n// const CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nconst ShopPage = ({ fetchCollectionsStart, match }) => {\n\n     useEffect(() => {\n         fetchCollectionsStart();\n     });\n\n    // constructor() {\n    //     super();\n\n    //     this.state = {\n    //         loading: true\n    //     };\n    // }\n\n    // state = {\n    //     loading: true\n    // };\n\n    \n\n    // componentDidMount() {\n\n\n    //     // this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n    //     //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    //     //     updateCollections(collectionsMap);\n    //     //     this.setState({ loading: false });\n    //     // });\n\n    //     // const { fetchCollectionsStartAsync } = this.props;\n    //     // fetchCollectionsStartAsync();\n\n    //     const { fetchCollectionsStart } = this.props;\n    //     fetchCollectionsStart();\n    // }\n\n    // render() {\n        //const { match, isCollectionsLoaded } = this.props;\n        // const { match } = this.props\n\n        return (\n            <div className='shop-page'>\n                {/*<Route \n                    exact path={`${match.path}`} \n                    render={(props) => <CollectionsOverviewWithSpinner isLoading={ isCollectionFetching } {...props} />} \n                />*/}\n                <Route \n                    exact path={`${match.path}`} \n                    component={CollectionsOverviewContainer}\n                />\n                <Route \n                    path={`${match.path}/:collectionId`} \n                    component={CollectionPageContainer}\n                />\n                {/*<Route \n                    path={`${match.path}/:collectionId`} \n                    render={(props) => <CollectionPageWithSpinner isLoading={ !isCollectionsLoaded } {...props} />}\n                />*/}\n            </div>\n        )\n    // }\n} \n\n\n// const mapStateToProps = createStructuredSelector({\n//     isCollectionsLoaded: selectIsCollectionsLoaded\n// });\n\nconst mapDispatchToProps = dispatch => ({\n    // updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n    // fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n    fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\n//export default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}