{"ast":null,"code":"var _jsxFileName = \"/Users/MATTCHANG/React_Projects/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux'; //import CollectionsOverview from '../../components/collections-overview/collections-overview.component';\n//import CollectionPage from '../collection/collection.component';\n\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\nimport CollectionPageContainer from '../collection/collection.component'; //import { updateCollections } from '../../redux/shop/shop.actions';\n\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions'; //import { selectIsCollectionFetching, selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors';\n\nimport WithSpinner from '../../components/with-spinner/with-spinner.component'; // const CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n// const CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  // constructor() {\n  //     super();\n  //     this.state = {\n  //         loading: true\n  //     };\n  // }\n  // state = {\n  //     loading: true\n  // };\n  componentDidMount() {\n    // this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n    //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    //     updateCollections(collectionsMap);\n    //     this.setState({ loading: false });\n    // });\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    //const { match, isCollectionsLoaded } = this.props;\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverviewContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CollectionPageContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }));\n  }\n\n} // const mapStateToProps = createStructuredSelector({\n//     isCollectionsLoaded: selectIsCollectionsLoaded\n// });\n\n\nconst mapDispatchToProps = dispatch => ({\n  // updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n}); //export default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/MATTCHANG/React_Projects/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","createStructuredSelector","connect","CollectionsOverviewContainer","CollectionPageContainer","fetchCollectionsStartAsync","WithSpinner","ShopPage","Component","componentDidMount","props","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;AACA;;AACA,OAAOC,4BAAP,MAAyC,sEAAzC;AACA,OAAOC,uBAAP,MAAoC,oCAApC,C,CAEA;;AACA,SAASC,0BAAT,QAA2C,+BAA3C,C,CACA;;AACA,OAAOC,WAAP,MAAwB,sDAAxB,C,CAEA;AACA;;AAEA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAsC;AAClC;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIAC,EAAAA,iBAAiB,GAAG;AAGhB;AACA;AACA;AACA;AACA;AAEA,UAAM;AAAEJ,MAAAA;AAAF,QAAiC,KAAKK,KAA5C;AACAL,IAAAA,0BAA0B;AAC7B;;AAEDM,EAAAA,MAAM,GAAG;AACL;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKF,KAAvB;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKI,oBAAC,KAAD;AACI,MAAA,KAAK,MADT;AACU,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACC,IAAK,EAD9B;AAEI,MAAA,SAAS,EAAEV,4BAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,eASI,oBAAC,KAAD;AACI,MAAA,IAAI,EAAG,GAAES,KAAK,CAACC,IAAK,gBADxB;AAEI,MAAA,SAAS,EAAET,uBAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,CADJ;AAoBH;;AApDiC,C,CAwDtC;AACA;AACA;;;AAEA,MAAMU,kBAAkB,GAAGC,QAAQ,KAAK;AACpC;AACAV,EAAAA,0BAA0B,EAAE,MAAMU,QAAQ,CAACV,0BAA0B,EAA3B;AAFN,CAAL,CAAnC,C,CAKA;;;AACA,eAAeH,OAAO,CAAC,IAAD,EAAOY,kBAAP,CAAP,CAAkCP,QAAlC,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\n\n//import CollectionsOverview from '../../components/collections-overview/collections-overview.component';\n//import CollectionPage from '../collection/collection.component';\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\nimport CollectionPageContainer from '../collection/collection.component';\n\n//import { updateCollections } from '../../redux/shop/shop.actions';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\n//import { selectIsCollectionFetching, selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\n\n// const CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n// const CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component{\n    // constructor() {\n    //     super();\n\n    //     this.state = {\n    //         loading: true\n    //     };\n    // }\n\n    // state = {\n    //     loading: true\n    // };\n\n    \n\n    componentDidMount() {\n\n\n        // this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n        //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n        //     updateCollections(collectionsMap);\n        //     this.setState({ loading: false });\n        // });\n\n        const { fetchCollectionsStartAsync } = this.props;\n        fetchCollectionsStartAsync();\n    }\n\n    render() {\n        //const { match, isCollectionsLoaded } = this.props;\n        const { match } = this.props\n\n        return (\n            <div className='shop-page'>\n                {/*<Route \n                    exact path={`${match.path}`} \n                    render={(props) => <CollectionsOverviewWithSpinner isLoading={ isCollectionFetching } {...props} />} \n                />*/}\n                <Route \n                    exact path={`${match.path}`} \n                    component={CollectionsOverviewContainer}\n                />\n                <Route \n                    path={`${match.path}/:collectionId`} \n                    component={CollectionPageContainer}\n                />\n                {/*<Route \n                    path={`${match.path}/:collectionId`} \n                    render={(props) => <CollectionPageWithSpinner isLoading={ !isCollectionsLoaded } {...props} />}\n                />*/}\n            </div>\n        )\n    }\n} \n\n\n// const mapStateToProps = createStructuredSelector({\n//     isCollectionsLoaded: selectIsCollectionsLoaded\n// });\n\nconst mapDispatchToProps = dispatch => ({\n    // updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n    fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\n//export default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}