{"ast":null,"code":"var _jsxFileName = \"/Users/MATTCHANG/React_Projects/crwn-clothing/client/src/components/sign-in/sign-in.component.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport './sign-in.styles.scss';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component'; // import { auth, signInWithGoogle } from '../../firebase/firebase.utils';\n\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions.js';\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  // constructor(props) {\n  //     super(props);\n  //     this.state = {\n  //         email: '',\n  //         password: ''\n  //     };\n  // }\n  const [userCredentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault(); // const { email, password } = this.state;\n    // no more setState. Redux will handle the state from here on \n    // out with sagas\n    // try {\n    //     await auth.signInWithEmailAndPassword(email, password);\n    //     this.setState({ email: '', password: '' });\n    // } catch (error) {\n    //     console.log(error);\n    // }\n    // const { emailSignInStart } = this.props;\n\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target; // this.setState({ [name]: value });\n\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  }; // render() {\n  //const { googleSignInStart } = this.props;\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, \"Sign in with your eamil and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    value: email,\n    handleChange: handleChange,\n    label: \"email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    value: password,\n    handleChange: handleChange,\n    label: \"password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }, \" Sign in \"), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  }, \"Sign in with Google\")))); // }\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/MATTCHANG/React_Projects/crwn-clothing/client/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","userCredentials","setCredentials","email","password","handleSubmit","event","preventDefault","handleChange","value","name","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport './sign-in.styles.scss';\n\nimport FormInput from '../form-input/form-input.component';\n\nimport CustomButton from '../custom-button/custom-button.component';\n\n// import { auth, signInWithGoogle } from '../../firebase/firebase.utils';\nimport { googleSignInStart, emailSignInStart }from '../../redux/user/user.actions.js';\n\nconst SignIn = ({ emailSignInStart, googleSignInStart }) => {\n    // constructor(props) {\n    //     super(props);\n\n    //     this.state = {\n    //         email: '',\n    //         password: ''\n    //     };\n    // }\n\n    const [ userCredentials, setCredentials ] = useState({ email: '', password: ''});\n\n    const { email, password } = userCredentials;\n\n    const handleSubmit = async event => {\n        event.preventDefault();\n\n        // const { email, password } = this.state;\n        \n\n        // no more setState. Redux will handle the state from here on \n        // out with sagas\n\n        // try {\n        //     await auth.signInWithEmailAndPassword(email, password);\n        //     this.setState({ email: '', password: '' });\n\n        // } catch (error) {\n        //     console.log(error);\n        // }\n\n        // const { emailSignInStart } = this.props;\n\n        emailSignInStart(email, password);\n    };\n\n    const handleChange = event => {\n        const { value, name } = event.target;\n\n        // this.setState({ [name]: value });\n        setCredentials({...userCredentials, [name]: value });\n    };\n\n    // render() {\n        //const { googleSignInStart } = this.props;\n        return (\n            <div className='sign-in'>\n                <h2>I already have an account</h2>\n                <span>Sign in with your eamil and password</span>\n\n                <form onSubmit={handleSubmit}>\n                    <FormInput \n                        name='email' \n                        type='email' \n                        value={email} \n                        handleChange={handleChange}\n                        label='email'\n                        required \n                    />\n                    <FormInput \n                        name='password' \n                        type='password' \n                        value={password} \n                        handleChange={handleChange}\n                        label='password'\n                        required \n                    />\n                    <div className='buttons'>\n                        <CustomButton type='submit'> Sign in </CustomButton>\n                        <CustomButton \n                            type='button' \n                            onClick={googleSignInStart} \n                            isGoogleSignIn\n                        >\n                            Sign in with Google\n                        </CustomButton>\n                    </div>\n                </form>\n            </div>\n        )\n    // }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    googleSignInStart: () => dispatch(googleSignInStart()),\n    emailSignInStart: (email, password) => dispatch(emailSignInStart({ email, password })) \n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}